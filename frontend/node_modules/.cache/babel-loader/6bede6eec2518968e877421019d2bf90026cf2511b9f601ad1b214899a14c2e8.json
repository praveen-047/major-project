{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\praveen.s\\\\OneDrive\\\\Desktop\\\\major_project\\\\frontend\\\\src\\\\components\\\\Home\\\\index.js\";\nimport { Component } from \"react\";\nimport Cookies from \"js-cookie\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Home extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      user: null\n    };\n    this.getUserDetails = () => {};\n  }\n  componentDidMount() {\n    const token = Cookies.get(\"jwt_token\");\n    if (!token) {\n      this.props.history.replace(\"/login\");\n      return;\n    }\n    fetch(\"http://localhost:5000/me\", {\n      headers: {\n        Authorization: token\n      }\n    }).then(res => res.json()).then(data => {\n      if (data.error_msg) {\n        alert(data.error_msg);\n        this.props.history.replace(\"/login\");\n      } else {\n        this.setState({\n          user: data\n        });\n      }\n    }).catch(err => console.error(\"Error fetching user:\", err));\n  }\n  render() {\n    const {\n      user\n    } = this.state;\n    if (!user) {\n      return /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 14\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"home-page\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Welcome, \", user.name, \" \\uD83D\\uDC4B\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), user.avatar ? /*#__PURE__*/_jsxDEV(\"img\", {\n        src: user.avatar,\n        alt: \"User Avatar\",\n        style: {\n          width: \"150px\",\n          height: \"150px\",\n          borderRadius: \"50%\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No avatar selected\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default Home;","map":{"version":3,"names":["Component","Cookies","jsxDEV","_jsxDEV","Home","constructor","args","state","user","getUserDetails","componentDidMount","token","get","props","history","replace","fetch","headers","Authorization","then","res","json","data","error_msg","alert","setState","catch","err","console","error","render","children","fileName","_jsxFileName","lineNumber","columnNumber","className","name","avatar","src","alt","style","width","height","borderRadius"],"sources":["C:/Users/praveen.s/OneDrive/Desktop/major_project/frontend/src/components/Home/index.js"],"sourcesContent":["import { Component } from \"react\";\r\nimport Cookies from \"js-cookie\";\r\n\r\nclass Home extends Component {\r\n  state = {\r\n    user:null\r\n  }\r\n\r\n  componentDidMount() {\r\n    const token = Cookies.get(\"jwt_token\");\r\n\r\n    if (!token) {\r\n      this.props.history.replace(\"/login\");\r\n      return;\r\n    }\r\n\r\n    fetch(\"http://localhost:5000/me\", {\r\n      headers: { Authorization: token },\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        if (data.error_msg) {\r\n          alert(data.error_msg);\r\n          this.props.history.replace(\"/login\");\r\n        } else {\r\n          this.setState({ user: data });\r\n        }\r\n      })\r\n      .catch((err) => console.error(\"Error fetching user:\", err));\r\n  }\r\n  getUserDetails = ()=>{\r\n    \r\n  }\r\n\r\n  render() {\r\n    const { user } = this.state;\r\n\r\n    if (!user) {\r\n      return <h2>Loading...</h2>;\r\n    }\r\n\r\n    return (\r\n      <div className=\"home-page\">\r\n        <h1>Welcome, {user.name} ðŸ‘‹</h1>\r\n\r\n        {/* âœ… Show avatar if available */}\r\n        {user.avatar ? (\r\n          <img\r\n            src={user.avatar}\r\n            alt=\"User Avatar\"\r\n            style={{ width: \"150px\", height: \"150px\", borderRadius: \"50%\" }}\r\n          />\r\n        ) : (\r\n          <p>No avatar selected</p>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,OAAOC,OAAO,MAAM,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,MAAMC,IAAI,SAASJ,SAAS,CAAC;EAAAK,YAAA,GAAAC,IAAA;IAAA,SAAAA,IAAA;IAAA,KAC3BC,KAAK,GAAG;MACNC,IAAI,EAAC;IACP,CAAC;IAAA,KAwBDC,cAAc,GAAG,MAAI,CAErB,CAAC;EAAA;EAxBDC,iBAAiBA,CAAA,EAAG;IAClB,MAAMC,KAAK,GAAGV,OAAO,CAACW,GAAG,CAAC,WAAW,CAAC;IAEtC,IAAI,CAACD,KAAK,EAAE;MACV,IAAI,CAACE,KAAK,CAACC,OAAO,CAACC,OAAO,CAAC,QAAQ,CAAC;MACpC;IACF;IAEAC,KAAK,CAAC,0BAA0B,EAAE;MAChCC,OAAO,EAAE;QAAEC,aAAa,EAAEP;MAAM;IAClC,CAAC,CAAC,CACCQ,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACzBF,IAAI,CAAEG,IAAI,IAAK;MACd,IAAIA,IAAI,CAACC,SAAS,EAAE;QAClBC,KAAK,CAACF,IAAI,CAACC,SAAS,CAAC;QACrB,IAAI,CAACV,KAAK,CAACC,OAAO,CAACC,OAAO,CAAC,QAAQ,CAAC;MACtC,CAAC,MAAM;QACL,IAAI,CAACU,QAAQ,CAAC;UAAEjB,IAAI,EAAEc;QAAK,CAAC,CAAC;MAC/B;IACF,CAAC,CAAC,CACDI,KAAK,CAAEC,GAAG,IAAKC,OAAO,CAACC,KAAK,CAAC,sBAAsB,EAAEF,GAAG,CAAC,CAAC;EAC/D;EAKAG,MAAMA,CAAA,EAAG;IACP,MAAM;MAAEtB;IAAK,CAAC,GAAG,IAAI,CAACD,KAAK;IAE3B,IAAI,CAACC,IAAI,EAAE;MACT,oBAAOL,OAAA;QAAA4B,QAAA,EAAI;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAC5B;IAEA,oBACEhC,OAAA;MAAKiC,SAAS,EAAC,WAAW;MAAAL,QAAA,gBACxB5B,OAAA;QAAA4B,QAAA,GAAI,WAAS,EAACvB,IAAI,CAAC6B,IAAI,EAAC,eAAG;MAAA;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EAG/B3B,IAAI,CAAC8B,MAAM,gBACVnC,OAAA;QACEoC,GAAG,EAAE/B,IAAI,CAAC8B,MAAO;QACjBE,GAAG,EAAC,aAAa;QACjBC,KAAK,EAAE;UAAEC,KAAK,EAAE,OAAO;UAAEC,MAAM,EAAE,OAAO;UAAEC,YAAY,EAAE;QAAM;MAAE;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjE,CAAC,gBAEFhC,OAAA;QAAA4B,QAAA,EAAG;MAAkB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CACzB;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAEV;AACF;AAEA,eAAe/B,IAAI","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}